{"version":3,"sources":["placeholder.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","react_default","a","createElement","App_NavList","react_router","path","exact","component","Contactlist","NewContactForm","Users","Component","Contacts","userId","jobTitleName","firstName","lastName","preferredFullName","employeeCode","region","phoneNumber","emailAddress","state","contacts","key","newContacts","this","splice","setState","contact","push","_this2","length","className","map","i","App_Contact","index","name","email","deleteContact","bind","Contact","_ref","Card","Img","variant","src","placeholder","Body","Title","Button","value","onClick","regions","code","handleSumbit","e","preventDefault","contactToAdd","target","elements","fName","substring","lName","toLowerCase","jobTitle","eCode","phone","reset","alert","Form","onSubmit","Group","controlId","Row","Label","Control","type","as","User","_ref2","printContact","selectedUser","undefined","id","_this5","user","App_User","selectUser","NavList","Navbar","bg","Nav","react_router_dom","to","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fc4fb53c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/placeholder.9bdbe362.png\";","import React, { Component } from 'react'\nimport placeholder from './placeholder.png'\nimport './App.css'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport {Card, Button, Form, FormGroup, FormLabel, FormControl, FormText, Row, Col, Nav, Navbar} from 'react-bootstrap/'\nimport { NavLink } from 'react-router-dom'\nimport { Route } from 'react-router-dom'\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div>\n        <NavList />\n        <Route path=\"/\" exact={true} component={Contactlist} />\n        <Route path=\"/addUser\" exact={true} component={NewContactForm} />\n        <Route path=\"/users\" exact={true} component={Users} />\n      </div>\n    );\n  }\n}\n\nconst Contacts=[{\n        \"userId\": \"rirani\",\n        \"jobTitleName\": \"Developer\",\n        \"firstName\": \"Romin\",\n        \"lastName\": \"Irani\",\n        \"preferredFullName\": \"Romin Irani\",\n        \"employeeCode\": \"E1\",\n        \"region\": \"CA\",\n        \"phoneNumber\": \"408-1234567\",\n        \"emailAddress\": \"romin.k.irani@gmail.com\"\n      },\n      {\n        \"userId\": \"nirani\",\n        \"jobTitleName\": \"Developer\",\n        \"firstName\": \"Neil\",\n        \"lastName\": \"Irani\",\n        \"preferredFullName\": \"Neil Irani\",\n        \"employeeCode\": \"E2\",\n        \"region\": \"CA\",\n        \"phoneNumber\": \"408-1111111\",\n        \"emailAddress\": \"neilrirani@gmail.com\"\n      },\n      {\n        \"userId\": \"thanks\",\n        \"jobTitleName\": \"Program Directory\",\n        \"firstName\": \"Tom\",\n        \"lastName\": \"Hanks\",\n        \"preferredFullName\": \"Tom Hanks\",\n        \"employeeCode\": \"E3\",\n        \"region\": \"CA\",\n        \"phoneNumber\": \"408-2222222\",\n        \"emailAddress\": \"tomhanks@gmail.com\"\n      }\n    ]\n\nclass Contactlist extends Component{\n  state = {\n    contacts: Contacts\n  }\n  deleteContact(key){\n   const newContacts = this.state.contacts\n   newContacts.splice(key,1)\n    this.setState({contacts: newContacts})\n  }\n\n  addContact (contact){\n    const newContacts = this.state.contacts\n    newContacts.push(contact)\n    this.setState({ contacts: newContacts })\n  }\n\n\n render() \n    {\n        const {contacts} = this.state;\n  if (this.state.contacts.length) {\n    return (<ul className=\"contactlist\">\n      {contacts.map(\n        (contact, i) => <Contact\n          key={i}\n          index={i}\n          firstName={contact.firstName}\n          lastName={contact.lastName}\n          name={contact.preferredFullName}\n          phoneNumber={contact.phoneNumber}\n          email={contact.emailAddress}\n          deleteContact={this.deleteContact.bind(this)} />\n      )}\n    </ul>)\n  }\n  else {\n    return (<h1>No Contacts Found</h1>)\n  }\n    }\n  }\n\nconst Contact = ({ name , firstName, lastName, phoneNumber , email , index, deleteContact}) =>\n{\n    return(\n        <Card>\n            <Card.Img variant=\"top\" src={placeholder} />\n            <Card.Body>\n              <Card.Title>{name}</Card.Title>\n                <span><label>First Name:</label> {firstName}</span>\n                <span><label>Last Name:</label> {lastName}</span>\n                <span><label>Phone Number:</label> {phoneNumber}</span>\n                <span><label>Email:</label> {email}</span>\n              <Button variant=\"primary\" value={index} onClick={()=>deleteContact(index)}>Delete</Button>\n            </Card.Body>\n        </Card>\n    );\n}\n\nclass NewContactForm extends Component{\n  state = {\n    \"userId\": null,\n    \"jobTitleName\": null,\n    \"firstName\": null,\n    \"lastName\": null,\n    \"preferredFullName\": null,\n    \"employeeCode\": null,\n    \"region\": null,\n    \"phoneNumber\": null,\n    \"emailAddress\": null\n  }\n\n  regions = [{ name: 'Bulgaria', code: 'BG' },\n  { name: 'Burkina Faso', code: 'BF' },\n  { name: 'Burundi', code: 'BI' },\n  { name: 'Cambodia', code: 'KH' },\n  { name: 'Cameroon', code: 'CM' },\n  { name: 'Canada', code: 'CA' },\n  { name: 'Cape Verde', code: 'CV' },\n  { name: 'Cayman Islands', code: 'KY' },\n  { name: 'Central African Republic', code: 'CF' },\n  { name: 'Chad', code: 'TD' },\n  { name: 'Chile', code: 'CL' },\n  { name: 'China', code: 'CN' },\n  { name: 'Gabon', code: 'GA' },\n  { name: 'Gambia', code: 'GM' },\n  { name: 'Georgia', code: 'GE' },\n  { name: 'Germany', code: 'DE' },\n  { name: 'Ghana', code: 'GH' },\n  { name: 'Gibraltar', code: 'GI' },\n  { name: 'Greece', code: 'GR' },\n  { name: 'Greenland', code: 'GL' },\n  { name: 'Grenada', code: 'GD' },\n  { name: 'Guadeloupe', code: 'GP' },\n  { name: 'Guam', code: 'GU' },\n  { name: 'Guatemala', code: 'GT' },\n  { name: 'Guernsey', code: 'GG' },\n  { name: 'Guinea', code: 'GN' },\n  { name: 'Guinea-Bissau', code: 'GW' },\n  { name: 'Guyana', code: 'GY' },\n  { name: 'Haiti', code: 'HT' },\n  { name: 'Heard Island and Mcdonald Islands', code: 'HM' },\n  { name: 'Tunisia', code: 'TN' },\n  { name: 'Turkey', code: 'TR' },\n  { name: 'Turkmenistan', code: 'TM' },\n  { name: 'Turks and Caicos Islands', code: 'TC' },\n  { name: 'Tuvalu', code: 'TV' },\n  { name: 'Uganda', code: 'UG' },\n  { name: 'Ukraine', code: 'UA' },\n  { name: 'United Arab Emirates', code: 'AE' },\n  { name: 'United Kingdom', code: 'GB' },\n  { name: 'United States', code: 'US' },\n  { name: 'United States Minor Outlying Islands', code: 'UM' }\n  ]\n\n  handleSumbit = (e) => {\n    e.preventDefault()\n   \n    let contactToAdd = {\n      \"userId\": (e.target.elements.fName.value.substring(0, 1) + e.target.elements.lName.value).toLowerCase(),\n      \"jobTitleName\": e.target.elements.jobTitle.value,\n      \"firstName\": e.target.elements.fName.value,\n      \"lastName\": e.target.elements.lName.value,\n      \"preferredFullName\": e.target.elements.fName.value + \" \" + e.target.elements.lName.value,\n      \"employeeCode\": e.target.elements.eCode.value,\n      \"region\": e.target.elements.region.value,\n      \"phoneNumber\": e.target.elements.phone.value,\n      \"emailAddress\": e.target.elements.email.value\n    }\n    Contacts.push(contactToAdd)\n    e.target.reset();\n    alert (\"User Added Succesffuly\")\n  }\n\n  render(){\n    return(\n      <Form onSubmit={this.handleSumbit}>\n        <Form.Group controlId=\"formBasicEmail\">\n        <Row>\n          <Form.Label>Job Title</Form.Label>\n          <Form.Control name=\"jobTitle\" type=\"text\" placeholder=\"e.g. Software Engineer\" />\n          <Form.Label>Employee Code</Form.Label>\n            <Form.Control name=\"eCode\" type=\"text\" placeholder=\"E7\"/>\n          </Row>\n          <Row>\n          <Form.Label>First Name</Form.Label>\n            <Form.Control name=\"fName\" type=\"text\" placeholder=\"John\" />\n          <Form.Label>Last Name</Form.Label>\n            <Form.Control name=\"lName\" type=\"text\" placeholder=\"Doe\" />\n          </Row>\n          <Row>\n          <Form.Label>Region:</Form.Label>\n            <Form.Control name=\"region\" as=\"select\" value={this.regions.code}>\n            {this.regions.map((e, key) => {\n              return <option key={key} value={e.code}>{e.code}</option>;\n            })}\n          </Form.Control>\n          <Form.Label>Phone Number</Form.Label>\n            <Form.Control name=\"phone\" type=\"number\" placeholder=\"000-000000000\" />\n          </Row>\n          <Row>\n          <Form.Label>E mail</Form.Label>\n            <Form.Control name=\"email\" type=\"email\" placeholder=\"example@example.com\" />\n          </Row>\n          <Button variant=\"success\" type=\"submit\">\n            Add Contact\n        </Button>\n        </Form.Group>\n      </Form>\n    )\n  }\n}\n\nconst User =({firstName, jobTitle, index, printContact})=>\n{\n  return (\n    <Card onClick={()=>printContact(index)}>\n      <Card.Img variant=\"top\" src={placeholder} />\n      <Card.Body>\n        <Card.Title>{jobTitle}</Card.Title>\n        <span>\n          <label>First Name:</label> {firstName}\n        </span>\n      </Card.Body>\n    </Card>\n  );\n}\nclass Users extends Component {\n  state = { Contacts: Contacts, selectedUser: undefined };\n\n  selectUser(index) {\n    this.setState({selectedUser: index});\n  }\n\n  printContact(index){\n    if(this.state.selectedUser === undefined) return;\n\n    return (\n      <div id=\"userDetails\">\n        <span className=\"row\">\n          <label>Job Title:</label> {Contacts[index].jobTitleName}\n        </span>\n        <span className=\"row\">\n          <label>First Name:</label> {Contacts[index].firstName}\n        </span>\n        <span className=\"row\">\n          <label>Last Name:</label> {Contacts[index].lastName}\n        </span>\n        <span className=\"row\">\n          <label>Full Name:</label> {Contacts[index].preferredFullName}\n        </span>\n        <span className=\"row\">\n          <label>Employee Code:</label> {Contacts[index].employeeCode}\n        </span>\n        <span className=\"row\">\n          <label>Region:</label> {Contacts[index].region}\n        </span>\n        <span className=\"row\">\n          <label>Phone Number:</label> {Contacts[index].phoneNumber}\n        </span>\n        <span className=\"row\">\n          <label>E-mail:</label> {Contacts[index].emailAddress}\n        </span>\n      </div>\n    ); \n  }\n  render() {\n    {\n      if (this.state.Contacts.length) {\n        return (\n          <div>\n            <ul className=\"contactlist\">\n              {this.state.Contacts.map((user, i) => (\n                <User\n                  key={i}\n                  index={i}\n                  firstName={user.firstName}\n                  jobTitle={user.jobTitleName}\n                  printContact={this.selectUser.bind(this)}\n                />\n              ))}\n            </ul>\n            {this.printContact(this.state.selectedUser)}\n          </div>\n        );\n      } else {\n        return <h1>No Users Found</h1>;\n      }\n    }\n  }\n}\n\nclass NavList extends Component{\n  render(){\n    return(\n    <Navbar bg=\"primary\" variant=\"dark\">\n      <Nav>\n        <NavLink className=\"nav-link\" exact to=\"/\">Home</NavLink>\n        <NavLink className=\"nav-link\"  exact to=\"/addUser\">Add User</NavLink>\n        <NavLink className=\"nav-link\"  exact to=\"/users\">Users</NavLink>\n      </Nav>\n    </Navbar>\n      \n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(<BrowserRouter>\n <App />\n</BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}